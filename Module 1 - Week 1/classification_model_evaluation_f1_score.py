# -*- coding: utf-8 -*-
"""classification_model_evaluation_f1_score

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1UYV5lB7qehHfjZjEOgN89qzOA6nUPvjR
"""

def f1_score_evaluation(tp, fp, fn):
    '''
    Function to calculate the F1 score

    Parameters:
    tp (int): True positive
    fp (int): False positive
    fn (int): False negative

    Returns:
    float: F1 score
    '''

    # Check the function to make sure that tp, fp and fn must be an integer
    if type(tp) != int or type(fp) != int or type(fn) != int:
        return 'fn must be int'

    # Check the function to make sure that tp, fp, and fn must > 0
    if tp <= 0 or fp <= 0 or fn <= 0:
        return 'tp and fp and fn must be greater than zero'

    precision = tp / (tp + fp)  # Calculate the Precision value
    recall = tp / (tp + fn)  # Calculate the Recall value
    f1_score = 2 * precision * recall / (precision + recall)  # Calculate the F1 score

    return f1_score  # Return the desired F1 score

# Example 1: Deliberately put a value different than int to test assertion error
assert f1_score_evaluation(tp=2, fp='a', fn=4) == 'fn must be int'

# Example 2: Deliberately put a value less than or equal to 0 to test assertion error
assert f1_score_evaluation(tp=2, fp=4, fn=0) == 'tp and fp and fn must be greater than zero'

# Correct input
assert round(f1_score_evaluation(tp=2, fp=3, fn=4), 2) == 0.36

# Test F1 score result
print(f1_score_evaluation(tp=4, fp=9, fn=6))